Count all the rows in the table project (name the column all_projects), then count those rows where price is not NULL (name the column projects_with_price)
SELECT count(*) as all_projects, count(price) as projects_with_price
FROM project

The agency manager gets a bonus of 5 for each project which got some feedback.
Show the theoretical sum the project manager could get if all the projects got some feedback (theoretical_bonus) and the actual bonus (actual_bonus).
SELECT count(*) * 5 as theoretical_bonus, count(feedback)*5 as actual_bonus
FROM project

The feedback of 0 doesn't mean anything to agency managers. They want to find out how many projects got meaningful (non-zero) feedback.
Count the number of project with non-zero feedback. Name the column projects_no
SELECT count(feedback) as projects_no
FROM project
WHERE feedback != 0

Show clients IDs (client_id) together with the number of projects they have commissioned. Name the second column projects_no. Don't show clients without any project.
SELECT client_id, count(project_id) as projects_no
FROM project
group by client_id

Let's check the statistics the other way round. For each translator in table project, show their ID (as translator_id) and the number of clients they have worked for. Name the second column clients_no.
SELECT translator_id,count(distinct client_id) as clients_no
FROM project
GROUP BY translator_id

The rate per word is the price divided by the number of words. For every translator, show ID together with number of distinct rates per word they used in their projects. Name the second column rates_no.
SELECT  translator_id, count(distinct cast(price as numeric)/words)
as rates_no
FROM project
Group by translator_id

Show the first and last name of each translator together with the number of projects they have completed (0 if there are no such projects). Name the last column projects_no.
SELECT t.first_name, t.last_name, count(p.project_id) as projects_no
FROM translator as t left join project as p
ON t.translator_id = p.translator_id
GROUP by t.first_name, t.last_name

For each client, show their name, the number of projects they have commissioned and the number of translators that have worked for that client. Do not count projects with a deadline within the last 3 months. The column names should be: name, projects_no, and translators_no.
SELECT c.name, count(p.project_id) as projects_no, count(distinct p.translator_id) as translators_no
FROM client as c left join project as p
ON c.client_id = p.client_id
left JOIN translator as t
ON  t.translator_id = p.translator_id 
WHERE deadline < current_date - interval '3' month 
GROUP by c.name

For each language combination (e.g. EN to ES, ES to EN, DE to PL etc.) show lang_from, lang_to and two more columns: the number of projects completed in this combination (as projects_no). the number of translators that have completed at least one project in that language combination (as translators_no). All completed projects are present in the project table.
SELECT lang_from , lang_to, count(project_id) as projects_no, count(distinct translator_id) as translators_no
FROM project 
GROUP by lang_from, lang_to

Find the average number of words from all projects with Spanish (ES) as the target language. Name the column average
SELECT avg(words) as average
FROM project
WHERE Lang_to = 'ES'

Show each translator's ID together with the average number of words they had to translate in all their projects (as average). Exclude project with ID 6 â€“ it was cancelled.
SELECT translator_id, avg(words) as average
FROM project
WHERE project_id != 6
GROUP BY translator_id
