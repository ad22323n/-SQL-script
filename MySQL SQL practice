Select all columns of those cars that:
•	were produced between 1999 and 2005,
•	are not Volkswagens,
•	have a model that begins with either 'P' or 'F',
•	have their price set.
SELECT *
FROM car
WHERE (production_year between 1999 and 2005) AND
	brand != "Volkswagens" AND
    (model like 'P%' or model like 'F%') AND
    price is not null;


Select the title and production_year columns from the movie table, and the name and birth_year columns from the director table in such a way that a movie is shown together with its director.
Show the column birth_year as born_in. Select only those movies which were filmed when their director was younger than 40 (i.e. the difference between production_year and birth_year must be less than 40).
SELECT m.title, m.production_year, d.name, d.birth_year as born_in
FROM movie as m JOIN director as d
ON m.director_id = d.id
WHERE (production_year - birth_year) < 40


Select the id, title, and production_year columns from the movie table, and the name and birth_year columns from the director table in such a way that a movie is shown together with its director. Show the column birth_year as born_in and the column production_year as produced_in. Select only those movies:
•	whose title contains a letter 'a' and which were filmed after 2000, or
•	whose director was born between 1945 and 1995.
SELECT m.id, m.title, m.production_year as produced_in, d.name, d.birth_year as born_in
FROM movie as m JOIN director as d
ON m.director_id = d.id
WHERE (m.title LIKE '%a%' and m.production_year > 2000) OR
	d.birth_year BETWEEN 1945 and 1995


Show the last_name and first_name columns from the employees table together with each person's average salary and the number of years they (have) worked in the company.
Use the following aliases: average_salary for each person's average salary and years_worked for the number of years worked in the company. Show only such employees who (have) spent more than 2 years in the company. Order the results according to the average salary in the descending order.
SELECT last_name, first_name, avg(salary) as average_salary, count(DISTINCT year) as years_worked
FROM employees
GROUP BY last_name, first_name
having count(year) > 2
order by avg(salary) DESC;
